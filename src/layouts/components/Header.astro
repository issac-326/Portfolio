---

import { Image } from 'astro:assets';
import profileImage from '/perfil.jfif'
import HeaderButton from './HeaderButton.astro';
import { getLangFromUrl, useTranslations } from '../../i18n/util';
import '../../../.src/styles/globals.css';
import { Button } from '@/components/ui/button';
import { ModeToggle } from '../../components/ModeToggle.tsx';

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

---

<div class="flex justify-center mb-6">
    <header class="fixed ">

        <nav class=" mx-auto p-4 w-[800px] flex gap-4 items-center justify-between py-3 bg-black-custom h-[60px] bg-slate-200 dark:bg-black-custom">
            <div>
                <a class='p-3'>
                    <Image src={profileImage} alt="Perfil" width={30} height={30} class="rounded-full w-11 dark:border-white border-gray-800 h-[45px] w-[45px] border-2 shadow-lg" /> 
                </a>
            </div>
            <div class="flex items-center">
                <HeaderButton slot="after" href=`${t('nav.url')}`>
                    <img alt="Idioma" loading="lazy" width="30" height="25" decoding="async" data-nimg="1" class="mr-4 text-white" style="color:transparent" src=`${t('nav.img')}`>
                    <p class="text-gray-800 dark:text-gray-100" >{t('nav.nam')}</p>
                </HeaderButton>
                <button id="CambioDeColor" class="ml-2 hover:bg-gray-800" transition:persist >
                    <svg width="30px" xmlns="http://www.w3.org/2000/svg" class="w-5 h-5" viewBox="0 0 24 24">
                        <path class="sun w-5 h-5 " fill-rule="evenodd" d="M12 17.5a5.5 5.5 0 1 0 0-11 5.5 5.5 0 0 0 0 11zm0 1.5a7 7 0 1 0 0-14 7 7 0 0 0 0 14zm12-7a.8.8 0 0 1-.8.8h-2.4a.8.8 0 0 1 0-1.6h2.4a.8.8 0 0 1 .8.8zM4 12a.8.8 0 0 1-.8.8H.8a.8.8 0 0 1 0-1.6h2.5a.8.8 0 0 1 .8.8zm16.5-8.5a.8.8 0 0 1 0 1l-1.8 1.8a.8.8 0 0 1-1-1l1.7-1.8a.8.8 0 0 1 1 0zM6.3 17.7a.8.8 0 0 1 0 1l-1.7 1.8a.8.8 0 1 1-1-1l1.7-1.8a.8.8 0 0 1 1 0zM12 0a.8.8 0 0 1 .8.8v2.5a.8.8 0 0 1-1.6 0V.8A.8.8 0 0 1 12 0zm0 20a.8.8 0 0 1 .8.8v2.4a.8.8 0 0 1-1.6 0v-2.4a.8.8 0 0 1 .8-.8zM3.5 3.5a.8.8 0 0 1 1 0l1.8 1.8a.8.8 0 1 1-1 1L3.5 4.6a.8.8 0 0 1 0-1zm14.2 14.2a.8.8 0 0 1 1 0l1.8 1.7a.8.8 0 0 1-1 1l-1.8-1.7a.8.8 0 0 1 0-1z"/>
                        <path class="moon w-5 h-5 " fill-rule="evenodd" d="M16.5 6A10.5 10.5 0 0 1 4.7 16.4 8.5 8.5 0 1 0 16.4 4.7l.1 1.3zm-1.7-2a9 9 0 0 1 .2 2 9 9 0 0 1-11 8.8 9.4 9.4 0 0 1-.8-.3c-.4 0-.8.3-.7.7a10 10 0 0 0 .3.8 10 10 0 0 0 9.2 6 10 10 0 0 0 4-19.2 9.7 9.7 0 0 0-.9-.3c-.3-.1-.7.3-.6.7a9 9 0 0 1 .3.8z"/>
                    </svg>
                </button>
            </div>
        </nav>
        <div class="fixed top-3 w-auto max-w-full left-1/2 -translate-x-1/2 z-[999] border border-gray-600 rounded-full text-gray-200 flex text-sm h-[44px] items-center ">
            <HeaderButton id="aboutMe" class="ml-4 "  href={`/${lang}/#aboutMe`}> {t('nav.aboutMe')} </HeaderButton>
            <HeaderButton id="skills"  href={`/${lang}/#skills`} >{t('nav.skills')}</HeaderButton>
            <HeaderButton id="proyects" href={`/${lang}/#proyects`} >{t('nav.proyects')}</HeaderButton>
        </div>

    </header>


</div>


<style>
    #CambioDeColor {
      border: 0;
      background: none;
    }
    .sun { fill: black; }
    .moon { fill: transparent; }
  
    :global(.dark) .sun { fill: transparent; }
    :global(.dark) .moon { fill: white; }
</style>

<script is:inline>

    // Lee el tema desde localStorage y aplica la clase correspondiente
    document.addEventListener("DOMContentLoaded", () => {
        const savedTheme = localStorage.getItem("theme");
        if (savedTheme) { 
            document.documentElement.classList.toggle("dark", savedTheme === "dark");
        }
    });

    // Manejar el cambio de tema al hacer clic en el botón
    document.getElementById("CambioDeColor").addEventListener("click", () => {
        const theme = document.documentElement.classList.toggle("dark") ? "dark" : "light";
        localStorage.setItem("theme", theme);
    });

    
    document.addEventListener("click", (e) => {
    let savedTheme = localStorage.getItem("theme");
    // Verifica si se ha hecho clic en un elemento con la clase 'selected'
    if (e.target.classList.contains("selected")) {
        // Remueve los estilos 'font-bold' y 'scale-110' de todas las opciones
        document.querySelectorAll(".selected").forEach(item => {
            item.classList.remove("font-bold", "scale-110");

        });

        // Agrega los estilos a la opción seleccionada
        e.target.classList.add("font-bold", "scale-110");
    }
});

</script>